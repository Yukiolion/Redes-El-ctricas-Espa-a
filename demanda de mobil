demanda de mobil 2019/codigo:

import pandas as pd

# Cargar datos
df = pd.read_csv("demanda_ire-otras-movil_mes_2019_todas_regiones.csv")

# Convertir 'fecha' a tipo datetime sin zona horaria
df['fecha'] = pd.to_datetime(df['fecha']).dt.date

# Renombrar columnas para estandarizar
df = df.rename(columns={
    'valor': 'indice_valor',
    'porcentaje': 'indice_porcentaje',
    'indicator': 'indicador',
    'region': 'region_geografica'
})

# Verificar si hay valores nulos
print(df.isnull().sum())

# Ver primeros registros limpios
print(df.head())

demanda de mobil 2020/codigo:
import pandas as pd

# Cargar el archivo
df = pd.read_csv("demanda_ire-otras-movil_mes_2020_todas_regiones.csv")

# Convertir 'fecha' a tipo datetime (y eliminar zona horaria)
df['fecha'] = pd.to_datetime(df['fecha']).dt.date

# Renombrar columnas para claridad
df = df.rename(columns={
    'valor': 'indice_valor',
    'porcentaje': 'indice_porcentaje',
    'indicator': 'indicador',
    'region': 'region_geografica'
})

# Eliminar posibles duplicados
df = df.drop_duplicates()

# Mostrar resumen limpio
print(df.head())

demanda de mobil 2021/codigo:

import pandas as pd

# Cargar datos
df = pd.read_csv("demanda_ire-otras-movil_mes_2021_todas_regiones.csv")

# Convertir fecha a datetime sin zona horaria
df['fecha'] = pd.to_datetime(df['fecha']).dt.date

# Eliminar columnas innecesarias si son constantes
if df['porcentaje'].nunique() == 1:
    df.drop(columns='porcentaje', inplace=True)

if df['indicator'].nunique() == 1:
    df.drop(columns='indicator', inplace=True)

# Eliminar filas con valores faltantes (opcional)
df.dropna(inplace=True)

# Renombrar columnas para más claridad (opcional)
df.rename(columns={'valor': 'indice_servicios'}, inplace=True)

# Mostrar el resultado limpio
print(df.head())

demanda de mobil 2022/codigo:

import pandas as pd

# Cargar el archivo
df = pd.read_csv("demanda_ire-otras-movil_mes_2022_todas_regiones.csv")

# Convertir 'fecha' a datetime
df['fecha'] = pd.to_datetime(df['fecha'])

# Eliminar columnas innecesarias
df = df.drop(columns=['porcentaje', 'indicator'])

# Eliminar duplicados (por si los hubiera)
df = df.drop_duplicates()

# Ordenar los datos por fecha y región
df = df.sort_values(by=['region', 'fecha']).reset_index(drop=True)

# Mostrar resultado limpio

print(df.head())

demanda de mobil 2023/codigo:

import pandas as pd

# Cargar el archivo
df = pd.read_csv("demanda_ire-otras-movil_mes_2023_todas_regiones.csv")

# Convertir la columna 'fecha' a formato datetime
df['fecha'] = pd.to_datetime(df['fecha'])

# Eliminar columnas innecesarias
df = df.drop(columns=['porcentaje', 'indicator'])

# Eliminar posibles duplicados
df = df.drop_duplicates()

# Ordenar los datos por región y fecha
df = df.sort_values(by=['region', 'fecha']).reset_index(drop=True)

# Guardar resultado limpio si se desea
# df.to_csv("archivo_limpio.csv", index=False)

# Mostrar las primeras filas del DataFrame limpio
print(df.head())
