import streamlit as st

from custom_pages.exploratory_pages.Balance import Balance
from custom_pages.exploratory_pages.Demanda import Demanda
from custom_pages.exploratory_pages.Generacion import Generacion
from custom_pages.exploratory_pages.Intercambio import Intercambio

from custom_pages.Database import Database
from custom_pages.Exploratory import Exploratory
from custom_pages.DL import DL
from custom_pages.About import About

# Configuraci√≥n de la p√°gina
st.set_page_config(page_title="Proyecto Red El√©ctrica Espa√±a", layout="wide")

# P√°gina principal
def main():
    # T√≠tulo centrado
    st.markdown("<h1 style='text-align: center;'>Proyecto Red El√©ctrica Espa√±a</h1>", unsafe_allow_html=True)

    # Espacio entre t√≠tulo y columnas
    st.markdown("<div style='height:30px;'></div>", unsafe_allow_html=True)

    # Primera fila: logo + descripci√≥n
    col1, col2 = st.columns([1, 2])
    with col1:
        st.image("images/Red_El√©ctrica_de_Espa√±a_(logo).png", width=400)

    with col2:
        texto = """
        <div style="display: flex; align-items: center; height: 100%; padding: 10px;">
            <p style="font-size: 16px;">
                El objetivo principal de este proyecto es extraer, procesar y visualizar datos energ√©ticos de la web de Red El√©ctrica de Espa√±a (REE),
                relacionados con la demanda el√©ctrica, el balance energ√©tico, la generaci√≥n y los intercambios internacionales de energ√≠a.
                Esto permite visualizar y analizar c√≥mo se comporta el sistema el√©ctrico espa√±ol en distintos momentos del d√≠a y del a√±o.
            </p>
        </div>
        """
        st.markdown(texto, unsafe_allow_html=True)

    # Espacio entre secciones
    st.markdown("<div style='height:50px;'></div>", unsafe_allow_html=True)

    # Segunda secci√≥n: selector + imagen
    st.markdown("### Definici√≥n de los datos")

    col1, col2 = st.columns([3, 1])
    with col1:
        opcion = st.selectbox(
            'Seleccionar los datos:',
            ('Balance', 'Demanda', 'Generaci√≥n', 'Intercambio')
        )
        if opcion == 'Balance':
            st.info("üîÑ El **balance energ√©tico** representa la diferencia entre la energ√≠a generada y la consumida.")
        elif opcion == 'Demanda':
            st.info("‚ö° La **demanda el√©ctrica** muestra cu√°nta energ√≠a est√°n consumiendo los usuarios en un momento dado o durante un periodo.")
        elif opcion == 'Generaci√≥n':
            st.info("‚öôÔ∏è La **generaci√≥n el√©ctrica** indica cu√°nta energ√≠a se est√° produciendo y con qu√© fuentes (renovables, no renovables, nuclear, etc.).")
        elif opcion == 'Intercambio':
            st.info("üåç Los **intercambios internacionales** reflejan la energ√≠a que Espa√±a importa o exporta a pa√≠ses vecinos a trav√©s de las interconexiones.")

    with col2:
        st.image("images/Demanda-Generacion.png", caption="Demanda-Generacion", width=350)

    st.markdown('### Clasificaci√≥n de las fuentes de energ√≠a')
    # Esto es un selectbox que permite seleccionar entre los diferentes tipos de datos que tenemos
    # y muestra una breve descripcion de cada uno de ellos
    
    opcion = st.selectbox('Fuentes de energ√≠a:', 
                            ('Renovables', 'No renovables', 'Otras categorias'))
    col1, col2 = st.columns([1, 3])

    with col1:
        
        if opcion == 'Renovables':
            st.image("images/renovables.png", caption="Fuentes Renovables",  use_container_width=True)

        elif opcion == 'No renovables':
            st.image("images/no_renovables.png", caption="Fuentes Renovables",  use_container_width=True)
        elif opcion == 'Otras categorias':
            st.image("images/otras_categorias.png", caption="Otras Categor√≠as", use_container_width=True)

    with col2:
        
        if opcion == 'Renovables':
            st.info(
                "üå± **Fuentes de energ√≠a renovables**\n\n"
                "Estas fuentes se regeneran de manera natural y son sostenibles en el tiempo. Incluyen:\n\n"
                "- E√≥lica\n"
                "- Hidr√°ulica\n"
                "- Hidroe√≥lica\n"
                "- Solar fotovoltaica\n"
                "- Solar t√©rmica\n"
                "- Otras renovables (biog√°s, biomasa, hidr√°ulica marina y geot√©rmica)\n"
                "- Generaci√≥n renovable\n"
                "- Turbinaci√≥n bombeo"
            )
        elif opcion == 'No renovables':
            st.info(
                "‚öôÔ∏è **Fuentes de energ√≠a no renovables**\n\n"
                "Estas fuentes provienen de recursos limitados o contaminantes. Incluyen:\n\n"
                "- Carb√≥n\n"
                "- Ciclo combinado\n"
                "- Cogeneraci√≥n\n"
                "- Fuel + Gas\n"
                "- Motores di√©sel\n"
                "- Nuclear\n"
                "- Residuos no renovables\n"
                "- Turbina de gas\n"
                "- Turbina de vapor\n"
                "- Generaci√≥n no renovable"
            )
        elif opcion == 'Otras categorias':
            st.info(
                "‚öñÔ∏è **Otras categor√≠as**\n\n"
                "Estas no son fuentes de generaci√≥n directa, pero est√°n presentes en el sistema. Incluyen:\n\n"
                "- Consumo bombeo (se usa para almacenar energ√≠a, no genera)\n"
                "- Saldo I. internacionales (intercambios con otros pa√≠ses)\n"
                "- Saldo almacenamiento (puede incluir carga y entrega de bater√≠as)\n"
                "- Carga bater√≠a (almacenamiento, no producci√≥n directa)"
            )
            

st.sidebar.title('Navegaci√≥n')
pagina = st.sidebar.radio("Selecciona una p√°gina:", 
                        ["P√°gina principal", "Exploratory Data Analysis", "Modelos de Prediccion", "Base de Datos", "About Us"])

# P√°gina principal con tabs
if pagina == 'P√°gina principal':
    main()
# Otras p√°ginas
elif pagina == 'Exploratory Data Analysis':
    Exploratory()
elif pagina == 'Modelos de Prediccion':
    DL()
elif pagina == 'Base de Datos':
    Database()
elif pagina == 'About Us':
    About()