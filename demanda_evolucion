import requests
import pandas as pd

# Constantes comunes
URL = "https://apidatos.ree.es/es/datos/demanda/evolucion"
HEADERS = {
    "Accept": "application/json",
    "Content-Type": "application/json",
    "Host": "apidatos.ree.es",
    "User-Agent": "Mozilla/5.0"
}

# Fechas y truncamiento
START_DATE = "2019-01-01T00:00"
END_DATE = "2019-12-31T23:59"
TIME_TRUNC = "day"

# Diccionario de geo_ids y nombres de regiones
region_ids = {
    "8741": "peninsular",
    "8742": "canarias",
    "8743": "baleares",
    "8744": "ceuta",
    "8745": "melilla",
    "4": "andalucia",
    "5": "aragon",
    "6": "cantabria",
    "7": "castilla la mancha",
    "8": "castilla y leon",
    "9": "catalu√±a",
    "10": "pais vasco",
    "11": "principado de asturias",
    "13": "comunidad de madrid",
    "14": "comunidad de navarra",
    "15": "comunidad valenciana",
    "16": "extremadura",
    "17": "galicia",
    "20": "la rioja",
    "21": "region de murcia"
}

# DataFrame final
df_total = pd.DataFrame()

# Loop por regiones
for geo_id, region_name in region_ids.items():
    params = {
        "start_date": START_DATE,
        "end_date": END_DATE,
        "time_trunc": TIME_TRUNC,
        "geo_id": geo_id
    }

    response = requests.get(URL, headers=HEADERS, params=params)
    data = response.json()
    included = data.get('included', [])

    registros = []

    for serie in included:
        indicador = serie['attributes']['title']
        valores = serie['attributes'].get('values', [])

        for punto in valores:
            registros.append({
                'fecha': punto['datetime'],
                'valor': punto['value'],
                'indicator': indicador,
                'region': region_name
            })

    df = pd.DataFrame(registros)
    df_total = pd.concat([df_total, df], ignore_index=True)

# Guardar a CSV
df_total.to_csv("demanda_evolucion_dia_2019_todas_regiones.csv", index=False)
